Atividade da PUC

1º

# Inicializa um contador para valores negativos
contador_negativos = 0

# Lê 5 valores
for i in range(5):
    valor = float(input(f"Digite o valor: "))
    if valor < 0:
        contador_negativos += 1

# Exibe a contagem de valores negativos
print(f"Quantidade de valores negativos: {contador_negativos}")

2º

import math

# Solicita ao usuário para inserir um valor inteiro e positivo N
N = int(input("Digite um valor inteiro e positivo N: "))

# Inicializa a variável para armazenar o valor de E
E = 1.0  # O primeiro termo da série é 1

# Calcula o valor de E usando a fórmula
for i in range(1, N + 1):
    E += 1 / math.factorial(i)

# Exibe o valor aproximado de E
print(f"O valor aproximado de E com N = {N} é: {E}")

3º

# Inicializa as variáveis para armazenar os resultados
salarios = []
num_filhos = []
total_habitantes = 0
total_salario_ate_100 = 0

# Loop para coletar os dados
while True:
    salario = float(input("Digite o salário do habitante (ou -1 para encerrar): "))
    if salario == -1:
        break
    
    num_filho = int(input("Digite o número de filhos: "))

    # Adiciona o salário e o número de filhos às listas
    salarios.append(salario)
    num_filhos.append(num_filho)
    
    total_habitantes += 1
    
    if salario <= 100:
        total_salario_ate_100 += 1

# Calcula a média do salário e do número de filhos
media_salario = sum(salarios) / total_habitantes
media_filhos = sum(num_filhos) / total_habitantes

# Encontra o maior salário
maior_salario = max(salarios)

# Calcula o percentual de pessoas com salário até R$100,00
percentual_salario_ate_100 = (total_salario_ate_100 / total_habitantes) * 100

# Exibe os resultados
print(f"Média do salário da população: {media_salario:.2f}")
print(f"Média do número de filhos: {media_filhos:.2f}")
print(f"Maior salário: {maior_salario:.2f}")
print(f"Percentual de pessoas com salário até R$100,00: {percentual_salario_ate_100:.2f}%")

4º


 # Chico começa com 1,50 metros
chico_altura = 150 

# Zé começa com 1,10 metros
ze_altura = 110     
anos = 0

while chico_altura >= ze_altura:
    
# Chico cresce 2 centímetros por ano
    chico_altura += 2  

# Zé cresce 3 centímetros por ano
    ze_altura += 3     
    anos += 1

print(f"Serão necessários {anos} anos para que Zé seja mais alto que Chico.")

5º


 # Chico começa com 1,50 metros
chico_altura = 150 

# Zé começa com 1,10 metros
ze_altura = 110     
anos = 0

while chico_altura >= ze_altura:
    
# Chico cresce 2 centímetros por ano
    chico_altura += 2  

# Zé cresce 3 centímetros por ano
    ze_altura += 3     
    anos += 1

print(f"Serão necessários {anos} anos para que Zé seja mais alto que Chico.")

6º

# Inicializa as contagens para cada candidato, votos nulos e votos em branco
votos_candidato1 = 0
votos_candidato2 = 0
votos_candidato3 = 0
votos_candidato4 = 0
votos_nulos = 0
votos_em_branco = 0

# Loop para coletar os votos
while True:
    voto = int(input("Digite o código do voto: "))

    if voto == 0:
        break

    if voto == 1:
        votos_candidato1 += 1
    elif voto == 2:
        votos_candidato2 += 1
    elif voto == 3:
        votos_candidato3 += 1
    elif voto == 4:
        votos_candidato4 += 1
    elif voto == 5:
        votos_nulos += 1
    elif voto == 6:
        votos_em_branco += 1
    else:
        print("Código de voto inválido. Os códigos válidos são de 1 a 6.")

# Exibe os resultados
print(f"Total de votos para o Candidato 1: {votos_candidato1}")
print(f"Total de votos para o Candidato 2: {votos_candidato2}")
print(f"Total de votos para o Candidato 3: {votos_candidato3}")
print(f"Total de votos para o Candidato 4: {votos_candidato4}")
print(f"Total de votos nulos: {votos_nulos}")
print(f"Total de votos em branco: {votos_em_branco}")

7º

# Inicializa as variáveis
total_notas = 0
soma_notas = 0

# Loop para coletar as notas e códigos dos alunos
while True:
    codigo_aluno = int(input("Digite o código do aluno: "))

    if codigo_aluno == 0:
        break

    nota = float(input(f"Digite a nota do aluno {codigo_aluno}: "))
    
    soma_notas += nota
    total_notas += 1

# Calcula a média das notas
if total_notas > 0:
    media = soma_notas / total_notas
    print(f"A média das notas dos alunos é: {media:.2f}")
else:
    print("Nenhuma nota foi inserida.")

8º

# Inicializa as variáveis
soma_pares = 0
total_pares = 0

# Loop para coletar números e calcular a média dos pares
while True:
    numero = int(input("Digite um número: "))
    
    if numero == 0:
        break

    if numero % 2 == 0:
        soma_pares += numero
        total_pares += 1

# Calcula a média dos números pares
if total_pares > 0:
    media = soma_pares / total_pares
    print(f"A média dos números pares digitados é: {media:.2f}")
else:
    print("Nenhum número par foi digitado.")

9º

# Inicializa as variáveis para o maior e o menor valor
maior_valor = float('-inf')  # Inicializado com o menor valor possível
menor_valor = float('inf')   # Inicializado com o maior valor possível

# Loop para coletar os valores e encontrar o maior e o menor
for i in range(50):
    valor = float(input(f"Digite o valor: "))
    
    if valor > maior_valor:
        maior_valor = valor
    
    if valor < menor_valor:
        menor_valor = valor

# Exibe o maior e o menor valor
print(f"O maior valor é: {maior_valor:.2f}")
print(f"O menor valor é: {menor_valor:.2f}")

10º

while True:
    codigo_aluno = int(input("Digite o código do aluno (negativo para encerrar): "))

    if codigo_aluno < 0:
        break

    nota1 = float(input("Digite a primeira nota: "))
    nota2 = float(input("Digite a segunda nota: "))
    nota3 = float(input("Digite a terceira nota: "))

    # Calcula a média ponderada
    notas = [nota1, nota2, nota3]
    notas.sort()  # Ordena as notas em ordem crescente
    media_ponderada = (4 * notas[2] + 3 * (notas[0] + notas[1])) / 10

    # Exibe as informações e a decisão (aprovado ou reprovado)
    print(f"Código do aluno: {codigo_aluno}")
    print(f"Notas: {nota1}, {nota2}, {nota3}")
    print(f"Média ponderada: {media_ponderada:.2f}")

    if media_ponderada >= 5:
        print("APROVADO")
    else:
        print("REPROVADO")

    print()  # Linha em branco para separar os resultados

print("Programa encerrado.")

11º

n = int(input("Digite o número de termos da progressão aritmética (n): "))
a1 = float(input("Digite o primeiro termo da progressão (a1): "))
r = float(input("Digite a razão da progressão (r): "))

# Inicializa uma lista para armazenar os termos da progressão
termos = []

# Calcula os n termos e armazena na lista
for i in range(n):
    termo = a1 + i * r
    termos.append(termo)

# Calcula a soma dos elementos
soma_elementos = sum(termos)

# Exibe os termos da progressão
print("Termos da progressão aritmética:")
for termo in termos:
    print(termo)

# Exibe a soma dos elementos
print(f"Soma dos elementos: {soma_elementos}")

12º

n = 20  # Número de valores a serem lidos

for i in range(20):
    valor = int(input(f"Digite o valor: "))
    print(f"Tabuada para o valor {valor}:")

    for j in range(1, valor + 1):
        for k in range(1, valor + 1):
            resultado = j * k
            print(f"{j} x {k} = {resultado}")

    print()  # Linha em branco entre as tabuadas

13º

def calcular_fatorial(num):
    if num == 0:
        return 1
    else:
        fatorial = 1
        for i in range(1, num + 1):
            fatorial *= i
        return fatorial

n = int(input("Digite o número de valores a serem lidos: "))

for i in range(n):
    valor = int(input(f"Digite o {i + 1}º valor: "))
    fatorial = calcular_fatorial(valor)
    print(f"Valor lido: {valor} | Fatorial: {fatorial}")

14º

soma_valores = 0
quantidade_valores = 0
quantidade_positivos = 0
quantidade_negativos = 0

while True:
    valor = float(input("Digite um valor: "))

    if valor == 0:
        break

    soma_valores += valor
    quantidade_valores += 1

    if valor > 0:
        quantidade_positivos += 1
    elif valor < 0:
        quantidade_negativos += 1

if quantidade_valores > 0:
    media = soma_valores / quantidade_valores
    percentual_positivos = (quantidade_positivos / quantidade_valores) * 100
    percentual_negativos = (quantidade_negativos / quantidade_valores) * 100

    print(f"Média dos valores: {media:.2f}")
    print(f"Quantidade de valores positivos: {quantidade_positivos}")
    print(f"Quantidade de valores negativos: {quantidade_negativos}")
    print(f"Percentual de valores positivos: {percentual_positivos:.2f}%")
    print(f"Percentual de valores negativos: {percentual_negativos:.2f}%")
else:
    print("Nenhum valor foi inserido.")

15º

intervalo_1_25 = 0
intervalo_26_50 = 0
intervalo_51_75 = 0
intervalo_76_100 = 0

while True:
    numero = float(input("Digite um número (ou um número negativo para encerrar): ")
    )
    if numero < 0:
        break

    if 0 <= numero <= 25:
        intervalo_1_25 += 1
    elif 26 <= numero <= 50:
        intervalo_26_50 += 1
    elif 51 <= numero <= 75:
        intervalo_51_75 += 1
    elif 76 <= numero <= 100:
        intervalo_76_100 += 1

print(f"Números no intervalo [0,25]: {intervalo_1_25}")
print(f"Números no intervalo [26,50]: {intervalo_26_50}")
print(f"Números no intervalo [51,75]: {intervalo_51_75}")
print(f"Números no intervalo [76,100]: {intervalo_76_100}")

16º

intervalo_1_25 = 0
intervalo_26_50 = 0
intervalo_51_75 = 0
intervalo_76_100 = 0

while True:
    numero = float(input("Digite um número: ")
)
    if numero < 0:
        break

    if 0 <= numero <= 25:
        intervalo_1_25 += 1
    elif 26 <= numero <= 50:
        intervalo_26_50 += 1
    elif 51 <= numero <= 75:
        intervalo_51_75 += 1
    elif 76 <= numero <= 100:
        intervalo_76_100 += 1

print(f"Números no intervalo [0,25]: {intervalo_1_25}")
print(f"Números no intervalo [26,50]: {intervalo_26_50}")
print(f"Números no intervalo [51,75]: {intervalo_51_75}")
print(f"Números no intervalo [76,100]: {intervalo_76_100}")

17º

while True:
    m = int(input("Digite o valor de m (ou um valor negativo para encerrar): ")
    )
    if m < 0:
        break

    n = int(input("Digite o valor de n: "))
    
    soma = 0

    for i in range(n):
        soma += m
        m += 1

    print(f"A soma dos {n} inteiros consecutivos a partir de {m - n} é: {soma}")

18º

import math

while True:
    m = int(input("Digite um valor inteiro e positivo (ou um valor negativo para encerrar): ")
    )
    if m < 0:
        break

    if m % 2 == 0:
        # Verifica divisores de m
        divisores = [d for d in range(1, m + 1) if m % d == 0]
        print(f"O valor {m} é par e possui {len(divisores)} divisores: {divisores}")

    elif m % 2 != 0 and m < 10:
        # Calcula o fatorial de m
        fatorial = math.factorial(m)
        print(f"O valor {m} é ímpar e menor que 10. Seu fatorial é: {fatorial}")

    elif m % 2 != 0 and m >= 10:
        # Calcula a soma dos inteiros de 1 até m
        soma = sum(range(1, m + 1))
        print(f"O valor {m} é ímpar e maior ou igual a 10. A soma dos inteiros de 1 até {m} é: {soma}")

19º

total_numeros = 0
soma_numeros = 0
quantidade_pares = 0
quantidade_impares = 0

while True:
    numero = int(input("Digite um número positivo: "))

    if numero == 0:
        break

    if numero > 0:
        total_numeros += 1
        soma_numeros += numero

        if numero % 2 == 0:
            quantidade_pares += 1

        else:
            quantidade_impares += 1

if total_numeros > 0:
    media_geral = soma_numeros / total_numeros

    if quantidade_pares > 0:
        media_pares = soma_numeros / quantidade_pares
    else:
        media_pares = 0

    print(f"Quantidade de números pares: {quantidade_pares}")
    print(f"Quantidade de números ímpares: {quantidade_impares}")
    print(f"Média de valores pares: {media_pares:.2f}")
    print(f"Média geral dos números lidos: {media_geral:.2f}")
else:
    print("Nenhum número positivo foi inserido.")

20º

somatorio_negativos = 0

while True:
    numero = int(input("Digite um número inteiro: ")
    )
    if numero == 0:
        break

    if numero < 0:
        somatorio_negativos += numero

print(f"O somatório dos números negativos é: {somatorio_negativos}")

21º

produtorio_pares = 1

while True:
    numero = int(input("Digite um número inteiro positivo: ")
    )
    if numero == 0:
        break

    if numero > 0 and numero % 2 == 0:
        produtorio_pares *= numero

print(f"O produtório dos números pares é: {produtorio_pares}")

22º

# Variáveis para cálculo
soma_salario = 0
quantidade_habitantes = 0
maior_idade = -1
menor_idade = float('inf')
mulheres_salario_ate_100 = 0

# Loop para entrada de dados
while True:
    idade = int(input("Digite a idade do habitante (ou uma idade negativa para encerrar): ")
    )
    if idade < 0:
        break

    sexo = input("Digite o sexo do habitante (M/F): ")
    salario = float(input("Digite o salário do habitante: ")
    )
    # Cálculo da média de salário
    soma_salario += salario
    quantidade_habitantes += 1

    # Verificação da maior e menor idade
    if idade > maior_idade:
        maior_idade = idade
    if idade < menor_idade:
        menor_idade = idade

    # Verificação de mulheres com salário até R$100,00
    if sexo == 'F' and salario <= 100:
        mulheres_salario_ate_100 += 1

# Verificação para evitar divisão por zero
if quantidade_habitantes > 0:
    media_salario = soma_salario / quantidade_habitantes

    print(f"A média de salário do grupo é: {media_salario:.2f}")
    print(f"Maior idade do grupo: {maior_idade}")
    print(f"Menor idade do grupo: {menor_idade}")
    print(f"Quantidade de mulheres com salário até R$100,00: {mulheres_salario_ate_100}")
else:
    print("Nenhum habitante foi registrado.")

23º

# Dicionário para armazenar estatísticas
estatisticas = {
    "sexo": {"masculino": 0, "feminino": 0},
    "olhos": {"azuis": 0, "verdes": 0, "castanhos": 0},
    "cabelos": {"louros": 0, "castanhos": 0, "pretos": 0},
    "idade": [],
}

# Coleta dos dados
while True:
    sexo = input("Digite o sexo (M/F): ")
    if sexo.lower() not in ["m", "f"]:
        break

    olhos = input("Digite a cor dos olhos (azuis, verdes, castanhos): ")
    if olhos.lower() not in ["azuis", "verdes", "castanhos"]:
        break

    cabelos = input("Digite a cor dos cabelos (louros, castanhos, pretos): ")
    if cabelos.lower() not in ["louros", "castanhos", "pretos"]:
        break

    idade = int(input("Digite a idade: "))

    # Atualiza estatísticas
    estatisticas["sexo"][sexo.lower()] += 1
    estatisticas["olhos"][olhos.lower()] += 1
    estatisticas["cabelos"][cabelos.lower()] += 1
    estatisticas["idade"].append(idade)

# Exibição de estatísticas
print("Estatísticas da pesquisa:")
print(f"Sexo - Masculino: {estatisticas['sexo']['masculino']}, Feminino: {estatisticas['sexo']['feminino']}")
print(f"Cor dos Olhos - Azuis: {estatisticas['olhos']['azuis']}, Verdes: {estatisticas['olhos']['verdes']}, Castanhos: {estatisticas['olhos']['castanhos']}")
print(f"Cor dos Cabelos - Louros: {estatisticas['cabelos']['louros']}, Castanhos: {estatisticas['cabelos']['castanhos']}, Pretos: {estatisticas['cabelos']['pretos']}")
print(f"Média de Idade: {sum(estatisticas['idade']) / len(estatisticas['idade']) if estatisticas['idade'] else 0}")

24º

maior_idade = -1
quantidade_mulheres_verdes_louros = 0

while True:
    idade = int(input("Digite a idade (ou -1 para encerrar): ")
    )
    if idade == -1:
        break

    sexo = input("Digite o sexo (M/F): ")
    olhos = input("Digite a cor dos olhos (azuis, verdes, castanhos): ")
    cabelos = input("Digite a cor dos cabelos (louros, castanhos, pretos): ")

    if idade > maior_idade:
        maior_idade = idade

    if sexo.lower() == "f" and 18 <= idade <= 35 and olhos.lower() == "verdes" and cabelos.lower() == "louros":
        quantidade_mulheres_verdes_louros += 1

print(f"A maior idade entre os habitantes é: {maior_idade}")
print(f"Quantidade de mulheres com idade entre 18 e 35 anos, olhos verdes e cabelos louros: {quantidade_mulheres_verdes_louros}")

25º

soma_precos_custo = 0
soma_precos_novos = 0
quantidade_produtos = 0

while True:
    codigo = int(input("Digite o código do produto (ou um código negativo para encerrar): ")
    )
    if codigo < 0:
        break

    preco_custo = float(input("Digite o preço de custo do produto: ")
    )
    # Calcula o novo preço com aumento de 20%
    preco_novo = preco_custo * 1.20

    # Atualiza as somas para cálculo das médias
    soma_precos_custo += preco_custo
    soma_precos_novos += preco_novo
    quantidade_produtos += 1

    print(f"Código do Produto: {codigo}, Preço Novo: {preco_novo:.2f}")

# Verifica se pelo menos um produto foi inserido
if quantidade_produtos > 0:
    media_precos_custo = soma_precos_custo / quantidade_produtos
    media_precos_novos = soma_precos_novos / quantidade_produtos

    print(f"Média dos Preços de Custo: {media_precos_custo:.2f}")
    print(f"Média dos Preços com Aumento: {media_precos_novos:.2f}")
else:
    print("Nenhum produto foi registrado.")

26º

for numero in range(1000, 2000):
    if numero % 11 == 5:
        print(numero)

27º

# Variáveis para armazenar o maior, o menor e a soma dos valores
maior_valor = float('-inf')
menor_valor = float('inf')
soma_valores = 0

# Loop para a entrada de dados
for i in range(500):
    valor = int(input(f"Digite o valor inteiro e positivo: "))
    
    if valor < 0:
        print("O valor deve ser positivo. Tente novamente.")
        continue
    
    # Atualiza o maior e o menor valor, bem como a soma dos valores
    if valor > maior_valor:
        maior_valor = valor
    if valor < menor_valor:
        menor_valor = valor
    soma_valores += valor

# Calcula a média dos valores
media_valores = soma_valores / 500

# Exibe os resultados
print(f"O maior valor é: {maior_valor}")
print(f"O menor valor é: {menor_valor}")
print(f"A média dos valores é: {media_valores:.2f}")

28º

n = int(input("Digite um valor inteiro e positivo (n): "))

if n <= 0:
    print("O valor deve ser um número inteiro e positivo.")
else:
    S = 0
    for i in range(1, n + 1):
        S += 1 / i

    print(f"A soma S é igual a {S:.2f}")

29º

soma = 0
quantidade = 0

for numero in range(13, 74):
    soma += numero
    quantidade += 1

media = soma / quantidade

print(f"A média aritmética dos números entre 13 e 73 é: {media:.2f}")

30º

for numero in range(101, 200, 2):
    print(numero)

31º

contador_dentro = 0
contador_fora = 0

for i in range(10):
    valor = float(input(f"Digite o valor: "))

    if 10 <= valor <= 20:
    
        contador_dentro += 1
    else:
        contador_fora += 1

print(f"Números dentro do intervalo [10, 20]: {contador_dentro}")
print(f"Números fora do intervalo [10, 20]: {contador_fora}")

32º 

for i in range(5):
    a = int(input(f"Digite o valor de a (inteiro positivo): "))
    b = int(input(f"Digite o valor de b (inteiro positivo maior que a): "))

    if a % 2 != 0:
        a += 1  # Garante que 'a' seja par

    print(f"Números pares entre {a} e {b} (inclusive):")
    for num in range(a, b + 1, 2):
        print(num)

33º

for i in range(20):
 N = int(input(f"Digite o valor N-{i + 1}: "))
 print(f"Tabuada de 1 até {N}:")
 for j in range(1, N + 1):
 resultado = j * N
 print(f"{j} x {N} = {resultado}")

34º

aluno_mais_alto = 0
altura_mais_alta = 0
aluno_mais_baixo = 0
altura_mais_baixa = float('inf')
for i in range(5):
 numero_aluno = int(input(f"Digite o número do aluno-{i + 1}: "))
 altura_aluno = int(input(f"Digite a altura em centímetros do aluno-{i + 1}: "))
 if altura_aluno > altura_mais_alta:
 aluno_mais_alto = numero_aluno
 altura_mais_alta = altura_aluno
 if altura_aluno < altura_mais_baixa:
 aluno_mais_baixo = numero_aluno
 altura_mais_baixa = altura_aluno
print(f"Aluno mais alto: Número {aluno_mais_alto} com altura de
{altura_mais_alta} cm")
print(f"Aluno mais baixo: Número {aluno_mais_baixo} com altura de
{altura_mais_baixa} cm")

35º

maior_altura = 0
menor_altura = float('inf')
soma_altura_mulheres = 0
soma_altura_turma = 0
quantidade_mulheres = 0

for i in range(50):
 altura = float(input(f"Digite a altura da pessoa {i + 1} (em centímetros): "))
 sexo = int(input("Digite o sexo (1 para masculino, 2 para feminino): ")

 if altura > maior_altura:
 maior_altura = altura

 if altura < menor_altura:
 menor_altura = altura
 soma_altura_turma += altura

 if sexo == 2:
 soma_altura_mulheres += altura
 quantidade_mulheres += 1
media_altura_mulheres = soma_altura_mulheres / quantidade_mulheres if
quantidade_mulheres > 0 else 0
media_altura_turma = soma_altura_turma / 50

print(f"Maior altura da turma: {maior_altura} cm")

print(f"Menor altura da turma: {menor_altura} cm")

print(f"Média da altura das mulheres: {media_altura_mulheres:.2f} cm")

print(f"Média da altura da turma: {media_altura_turma:.2f} cm"

36.

def calcular_fatorial(numero):

 if numero == 0:
 return 1
 fatorial = 1
 for i in range(1, numero + 1):
 fatorial *= i
 return fatorial
N = int(input("Digite o número N que indica quantos valores devem ser lidos: "))
for i in range(N):
 valor = int(input(f"Digite o {i + 1}º valor: "))
 fatorial = calcular_fatorial(valor)

 print(f"Valor: {valor} - Fatorial: {fatorial}")

37.

X = int(input("Digite o valor de X: "))
soma = 0
for i in range(1, 21):
 termo = X ** i
 soma += termo

 print(termo, end=" ")

print("\nSoma dos termos:", soma)

38.

def is_primo(numero):

 if numero <= 1:
 return False
 for i in range(2, int(numero**0.5) + 1):

 if numero % i == 0:
 return False
 return True
produto_primos = 1
for numero in range(92, 1479):

 if is_primo(numero):
 produto_primos *= numero

print("O produto dos números primos entre 92 e 1478 é:", produto_primos)

39.

def divisores(numero):
 lista_divisores = []
 for i in range(1, numero):
 
if numero % i == 0:
 lista_divisores.append(i)
 return lista_divisores
numeros_perfeitos = []
numero = 2

while len(numeros_perfeitos) < 5:
 soma_divisores = sum(divisores(numero))
 
if soma_divisores == numero:
 numeros_perfeitos.append(numero)
 numero += 1

print("Os 5 primeiros números perfeitos são:")
for numero_perfeito in numeros_perfeitos:

 print(numero_perfeito)

40.

def calcular_fatorial(numero):

 if numero == 0:
 return 1
 fatorial = 1
 for i in range(1, numero + 1):
 fatorial *= i
 return fatorial
N = int(input("Digite o valor de N: "))

for i in range(N):
 M = int(input(f"Digite o valor (inteiro e positivo): "))
 somatorio = sum(range(1, M + 1))
 fatorial = calcular_fatorial(M)

 print(f"Valor: {M} - Somatório: {somatorio} - Fatorial: {fatorial}")

41º

def calcular_media_ponderada(n1, n2, n3):

 return (n1 * 2 + n2 * 4 + n3 * 3) / 10
numero_alunos = 50
media_geral_turma = 0

for i in range(numero_alunos):
 n1 = float(input(f"Digite a primeira nota do aluno: "))
 n2 = float(input(f"Digite a segunda nota do aluno: "))
 n3 = float(input(f"Digite a terceira nota do aluno: "))

 media_aluno = calcular_media_ponderada(n1, n2, n3)
 media_geral_turma += media_aluno
 resultado = "Aprovado" if media_aluno >= 7 else "Reprovado"
 print(f"Aluno {i + 1} - Média Ponderada: {media_aluno:.2f} - {resultado}")
media_geral_turma /= numero_alunos

print(f"Média Geral da Turma: {media_geral_turma:.2f}")

42º

n = int(input("Digite o número inteiro e positivo n: "))
H = 10 * n
print(f"A soma H é igual a {H}.")

43º

grupos = []

for i in range(5):
 grupo = []

 for j in range(4):
 valor = int(input(f"Digite o valor do grupo: "))
 grupo.append(valor)
 grupos.append(grupo)

print("Grupos na ordem lida:")
for grupo in grupos:

 print(grupo)
grupos_ordenados = sorted(grupos, key=lambda x: x[0], reverse=True)

print("Grupos em ordem decrescente:")
for grupo in grupos_ordenados:
 
print(grupo)

44º

codigos_cidades = []
estados = []
veiculos_passeio = []
acidentes_com_vitimas = []

for i in range(200):
 codigo = int(input(f"Digite o código da cidade {i + 1}: "))
 estado = input(f"Digite o estado da cidade {i + 1}: ")
 veiculos = int(input(f"Digite o número de veículos de passeio em 1992 da
cidade {i + 1}: "))
 acidentes = int(input(f"Digite o número de acidentes de trânsito com vítimas
em 1992 da cidade {i + 1}: "))
 codigos_cidades.append(codigo)
 estados.append(estado)
 veiculos_passeio.append(veiculos)
 acidentes_com_vitimas.append(acidentes)
indice_maximo = max(acidentes_com_vitimas)
indice_minimo = min(acidentes_com_vitimas)
cidade_maximo =
codigos_cidades[acidentes_com_vitimas.index(indice_maximo)]
cidade_minimo =
codigos_cidades[acidentes_com_vitimas.index(indice_minimo)]

print(f"a) Maior índice de acidentes de trânsito: {indice_maximo}, Cidade:
{cidade_maximo}")

print(f" Menor índice de acidentes de trânsito: {indice_minimo}, Cidade:
{cidade_minimo}")
media_veiculos = sum(veiculos_passeio) / len(veiculos_passeio)

print(f"b) Média de veículos nas cidades brasileiras: {media_veiculos:.2f}")
acidentes_rs = [acidentes_com_vitimas[i] for i in range(200) if estados[i] == 'RS']
media_acidentes_rs = sum(acidentes_rs) / len(acidentes_rs)

print(f"c) Média de acidentes com vítimas no Rio Grande do Sul:
{media_acidentes_rs:.2f}")

45.

total_habitantes = 1000
contador = 0
soma_idade = 0
soma_altura_mulheres = 0
soma_idade_homens = 0
contagem_idade_18_35 = 0
while contador < total_habitantes:
 sexo = int(input("Digite o sexo (0-feminino, 1-masculino): "))
 idade = int(input("Digite a idade: "))
 altura = float(input("Digite a altura em metros: "))
 soma_idade += idade

 if sexo == 0:
 soma_altura_mulheres += altura

 else:

 soma_idade_homens += idade

 if idade >= 18 and idade <= 35:
 contagem_idade_18_35 += 1
 contador += 1
media_idade = soma_idade / total_habitantes
media_altura_mulheres = soma_altura_mulheres / total_habitantes
media_idade_homens = soma_idade_homens / (total_habitantes -
total_habitantes)
percentual_idade_18_35 = (contagem_idade_18_35 / total_habitantes) * 100

print(f"a) Média da idade do grupo: {media_idade:.2f}")

print(f"b) Média da altura das mulheres: {media_altura_mulheres:.2f}")

print(f"c) Média da idade dos homens: {media_idade_homens:.2f}")

print(f"d) Percentual de pessoas com idade entre 18 e 35 anos:
{percentual_idade_18_35:.2f}%")

46.

maior_idade = 0
contagem_mulheres_verdes_louros = 0

for _ in range(500):
 sexo = input("Digite o sexo (M/F): ")
 cor_olhos = input("Digite a cor dos olhos (A/V/C): ")
 cor_cabelos = input("Digite a cor dos cabelos (L/C/P): ")
 idade = int(input("Digite a idade: "))

 if idade > maior_idade:
 maior_idade = idade

 if sexo == "F" and 18 <= idade <= 35 and cor_olhos == "V" and cor_cabelos
== "L":
 contagem_mulheres_verdes_louros += 1
print(f"A maior idade do grupo é: {maior_idade}")

print(f"A quantidade de mulheres com idade entre 18 e 35 anos, olhos verdes e
cabelos louros é: {contagem_mulheres_verdes_louros}")

47.

clientes = []

for i in range(150):
 nome_cliente = input(f"Digite o nome do cliente {i + 1}: ")
 valor_compras = float(input(f"Digite o valor das compras do cliente {i + 1} no
ano passado: "))

 if valor_compras < 500000:
 bonus = valor_compras * 0.10

 else:

 bonus = valor_compras * 0.15

 cliente = {
 "Nome": nome_cliente,
 "Valor_Compras": valor_compras,
 "Bônus": bonus
 }

 clientes.append(cliente)
for cliente in clientes:

 print(f"Nome: {cliente['Nome']}, Bônus: R$ {cliente['Bônus']:.2f}")

48.

conceitos = []
for i in range(75):
 matricula = input(f"Digite o número de matrícula do aluno {i + 1}: ")
 nota_final = float(input(f"Digite a nota numérica final do aluno {i + 1}: "))
 
if 0.0 <= nota_final <= 4.9:
 conceito = "D"
 elif 5.0 <= nota_final <= 6.9:
 conceito = "C"
 elif 7.0 <= nota_final <= 8.9:
 conceito = "B"
 elif 9.0 <= nota_final <= 10.0:
 conceito = "A"

 else:

 conceito = "Nota inválida"
 conceitos.append((matricula, conceito))
for matricula, conceito in conceitos:
 print(f"Matrícula: {matricula}, Conceito: {conceito}")

49.

n = int(input("Digite um número inteiro e positivo para calcular o fatorial: "))

if n < 0:

 print("O fatorial não está definido para números negativos.")

else:

 fatorial = 1
 for i in range(1, n + 1):
 fatorial *= i
 print(f"{n}! = {fatorial}")

50.


# Solicite ao usuário os valores de X e Y
x = int(input("Digite o valor de X (inteiro e positivo): "))
y = int(input("Digite o valor de Y (inteiro e positivo): "))
if x < 0 or y < 0:

 print("X e Y devem ser números inteiros e positivos.")

else:

 resultado = x ** y
 print(f"{x}^{y} = {resultado}")
51.
n = int(input("Digite um número inteiro positivo para calcular o fatorial: "))

if n < 0:

 print("O fatorial não está definido para números negativos.")

else:

 fatorial = 1

 for i in range(1, n + 1):
 fatorial *= i

 print(f"{n}! = {fatorial}")

52.

import math
n = int(input("Digite o valor de N: "))
p = int(input("Digite o valor de p: "))

if n < 0 or p < 0:

 print("N e p devem ser números inteiros positivos.")

else:

 combinacao = math.comb(n, p)
 arranjo = math.perm(n, p)

 print(f"Combinação C({n}, {p}) = {combinacao}")

 print(f"Arranjo A({n}, {p}) = {arranjo}")

53.

def eh_primo(numero):

 if numero < 2:
 return False
 for i in range(2, int(numero**0.5) + 1):

 if numero % i == 0:
 return False
 return True
numeros_primos = [1, 2, 3]
numero_atual = 4
while len(numeros_primos) < 20:

 if eh_primo(numero_atual):
 numeros_primos.append(numero_atual)
 numero_atual += 1

print("Os 20 primeiros números primos são:")
for primo in numeros_primos:

 print(primo)

54.

def eh_primo(numero):

 if numero < 2:
 return False

 for i in range(2, int(numero**0.5) + 1):

 if numero % i == 0:
 return False
 return True
numeros_primos = [1, 2, 3]
numero_atual = 4
while len(numeros_primos) < 20:

 if eh_primo(numero_atual):
 numeros_primos.append(numero_atual)
 numero_atual += 1

print("Os 20 primeiros números primos são:")
for primo in numeros_primos:

 print(primo)

55.

from datetime import datetime

data1_str = input("Digite a primeira data (YYYY-MM-DD): ")

data2_str = input("Digite a segunda data (YYYY-MM-DD): ")

data1 = datetime.strptime(data1_str, "%Y-%m-%d")

data2 = datetime.strptime(data2_str, "%Y-%m-%d")
diferenca = (data2 - data1).days

print(f"A diferença entre as datas é de {diferenca} dias.")

